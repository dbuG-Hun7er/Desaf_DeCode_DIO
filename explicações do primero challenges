Escopo do desafio

# Dicionário associando características aos modelos Claude 3
caracteristicas_modelos = {
    "automatizar tarefas": "Claude 3 Opus",
    "pesquisa e desenvolvimento": "Claude 3 Opus",
    "resposta rápida e capacidade de resposta quase instantânea": "Claude 3 Haiku",
    "motores de chatbots de lojas": "Claude 3 Haiku",
    "moderação de conteúdo": "Claude 3 Haiku",
    "processamento de tarefas mais básicas": "Claude 3 Haiku",
    "raciocínio cuidadoso": "Claude 3 Sonnet",
    "processamento de dados": "Claude 3 Sonnet",
    "aplicações de vendas": "Claude 3 Sonnet",
    "extração de texto de imagens": "Claude 3 Sonnet",
    "equilíbrio ideal entre inteligência e velocidade": "Claude 3 Sonnet",
   
}

# TODO: Crie uma função 'encontrar_modelo' para encontrar o modelo correspondente à característica fornecida: 

# TODO: Itere sobre cada chave e valor no dicionário caracteristicas_modelos:
   
# TODO: Verifique se a palavra-chave (característica) está contida na característica fornecida (ignorando maiúsculas/minúsculas):
        
# TODO: Se encontrada, retorne o modelo correspondente:
           
# TODO: Se não encontrada, retorne uma mensagem indicando que o "Modelo não encontrado.":
 

# Entrada do usuário
caracteristica_fornecida = input()

# Encontrar e imprimir o modelo correspondente
modelo_correspondente = encontrar_modelo(caracteristica_fornecida)
print(modelo_correspondente)
--------------------------------------------------------------------------------------------------

Explicações do code. 

Importação de Módulos

import sys >>>>>> O módulo sys fornece acesso a algumas variáveis e funções que interagem 
com o interpretador Python. Aqui, sys.stdin.readline() é usado para ler a entrada do usuário.
--------------------------------------------------------------------------------------------------
Dicionário caracteristicas_modelos
caracteristicas_modelos = {
    "automatizar tarefas": "Claude 3 Opus",
    "pesquisa e desenvolvimento": "Claude 3 Opus",
    "resposta rápida e capacidade de resposta quase instantânea": "Claude 3 Haiku",
    "motores de chatbots de lojas": "Claude 3 Haiku",
    "moderação de conteúdo": "Claude 3 Haiku",
    "processamento de tarefas mais básicas": "Claude 3 Haiku",
    "raciocínio cuidadoso": "Claude 3 Sonnet",
    "processamento de dados": "Claude 3 Sonnet",
    "aplicações de vendas": "Claude 3 Sonnet",
    "extração de texto de imagens": "Claude 3 Sonnet",
    "equilíbrio ideal entre inteligência e velocidade": "Claude 3 Sonnet",
}
Este dicionário mapeia características específicas para os modelos Claude 3 correspondentes. 
Cada chave é uma característica, e cada valor é o modelo Claude 3 que melhor atende a essa característica.
-----------------------------------------------------------------------------------------------------------

Função encontrar_modelo

def encontrar_modelo(caracteristica_fornecida, caracteristicas_modelos):
    for caracteristica, modelo in caracteristicas_modelos.items():
        if caracteristica.lower() in caracteristica_fornecida.lower():
            return modelo
    return "Modelo não encontrado."

    Esta função procura encontrar o modelo Claude 3 que 
    corresponde a uma característica fornecida pelo usuário.

Parâmetros:

caracteristica_fornecida: A característica que o usuário está procurando.
caracteristicas_modelos: O dicionário de características e modelos.
Processo:

Itera sobre cada chave (característica) e valor (modelo) no dicionário.
Compara se a chave (característica) do dicionário está contida 
na caracteristica_fornecida (ignora maiúsculas/minúsculas).
Retorna o modelo correspondente se encontrar uma correspondência.
Se não encontrar nenhuma correspondência, retorna "Modelo não encontrado."
----------------------------------------------------------------------------
Entrada do Usuário

caracteristica_fornecida = sys.stdin.readline().strip()
Esta linha lê a entrada do usuário a partir do terminal:

sys.stdin.readline() lê a entrada até encontrar uma nova linha (pressionamento da tecla Enter).
strip() remove espaços em branco extras no início e no final da entrada.
---------------------------------------------------------------------------------------------------

Encontrar e Imprimir o Modelo Correspondente

modelo_correspondente = encontrar_modelo(caracteristica_fornecida, caracteristicas_modelos)
print(modelo_correspondente)

encontrar_modelo: Chama a função encontrar_modelo com a característica fornecida e o dicionário de características.
print: Imprime o modelo correspondente ou a mensagem "Modelo não encontrado."
------------------------------------------------------------------------------------------------------------------------

Resumo
O programa define um dicionário que associa características aos modelos Claude 3.
Define uma função para encontrar o modelo correspondente a uma característica fornecida.
Lê a característica do usuário.
Chama a função para encontrar o modelo e imprime o resultado.
Este código permite que um usuário forneça uma característica e receba o modelo Claude 3 mais apropriado para essa característica.


